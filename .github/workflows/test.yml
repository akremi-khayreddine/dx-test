name: Test
'on':
  push:
    types: []
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v2
        with:
          repository: '${{ github.repository }}'
          token: '${{ github.token }}'
          ssh-strict: true
          persist-credentials: true
          clean: true
          fetch-depth: 1
        env: {}
      - id: set-up-node
        name: Setup node
        uses: actions/setup-node@v1
        with:
          always-auth: 'false'
          node-version: 10.x
        env: {}
      - id: install
        name: Install dependencies
        env: {}
        run: npm install
      - id: build
        name: Build app
        env: {}
        run: npm run build-app
      - id: hi-webhhok
        name: Webhook
        uses: distinctlab/dx-actions-loader@master
        if: always()
        env:
          GITHUB_TOKEN: '${{ secrets.ACCESS_TOKEN }}'
        with:
          private_action: akremi-khayreddine/hi-pipelines-webhook-action@master
          project_id: test-pipeline
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          job_name: build
          job_status: '${{ job.status }}'
          next_job: setup
          run_id: '${{ github.run_id }}'
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - id: release
        name: Get latest release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: akremi-khayreddine/dx-test
        env: {}
      - id: hi-webhhok
        name: Webhook
        uses: distinctlab/dx-actions-loader@master
        if: always()
        env:
          GITHUB_TOKEN: '${{ secrets.ACCESS_TOKEN }}'
        with:
          private_action: akremi-khayreddine/hi-pipelines-webhook-action@master
          project_id: test-pipeline
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          job_name: setup
          job_status: '${{ job.status }}'
          run_id: '${{ github.run_id }}'
